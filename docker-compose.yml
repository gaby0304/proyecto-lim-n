networks:
  dto-red:
    ipam:
      driver: default
      config:
        - subnet: "192.168.0.0/24"

services:
  db:
    image: mysql:9.1.0
    container_name: base_datosPC
    environment:
      - MYSQL_DATABASE=limon_website
      - MYSQL_ROOT_PASSWORD=12345
      - log_bin_trust_function_creators=1
    ports:
      - 3307:3306
    volumes:
      - ./mysql:/var/lib/mysql
      - ./db-dump:/docker-entrypoint-initdb.d
    networks:
      dto-red:
        ipv4_address: "192.168.0.10"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadminPC
    ports:
      - 8081:80
    environment:
      - PMA_HOST=db
      - PMA_PORT=3306
    depends_on:
      - db
    networks:
      dto-red:
        ipv4_address: "192.168.0.11"

  web-datos:
    build:
      context: ./datos
      dockerfile: DockerFile
    container_name: servidor-datosPC
    volumes:
      - ./datos/src:/var/www/html/src
      - ./datos/public:/var/www/html/public
    ports:
      - 8000:80
    depends_on:
      - db
    networks:
      dto-red:
        ipv4_address: "192.168.0.12"

  web-negocio:
    build:
      context: ./negocio
      dockerfile: DockerFile
    container_name: servidor-negocioPC
    volumes:
      - ./negocio/src:/var/www/html/src
      - ./negocio/public:/var/www/html/public
    ports:
      - 9000:80
    depends_on:
      - web-datos
    networks:
      dto-red:
        ipv4_address: "192.168.0.13"

  remark42:
    image: umputun/remark42:latest
    container_name: remark42
    hostname: "remark42"
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "5"
    environment:
      - REMARK_URL=http://localhost:8080
      - SITE=localhost
      - SECRET=your-secret-key
      - AUTH_EMAIL_ENABLED=true
      - AUTH_ANON=false
      - AUTH_GOOGLE_CID
      - AUTH_GOOGLE_CSEC
      - AUTH_DISQUS_CID
      - AUTH_DISQUS_CSEC
      - UI_CSS=https://cdn.jsdelivr.net/npm/remark42/dist/remark.css
    ports:
      - "8080:8080"
    volumes:
      - ./data/remark42:/srv/var
    restart: always
    networks:
      dto-red:
        ipv4_address: "192.168.0.14"

  web-front:
    build:
      context: ./front
      dockerfile: DockerFile
    container_name: servidor-frontPC
    ports:
      - "80:80"
    depends_on:
      - web-negocio
    networks:
      dto-red:
        ipv4_address: "192.168.0.15"

secrets:
  db_password:
    file: db_password.txt

volumes:
  db-dump:
  mysql:
  datos:
  negocio: